{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\config\\adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "Console",
        "File",
        "DateFile",
        "path",
        "database",
        "nunjucks",
        "isDev",
        "think",
        "env",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "mysql",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern",
        "view",
        "viewPath",
        "sep",
        "extname",
        "beforeRender",
        "options"
    ],
    "mappings": "AAAA,MAAMA,YAAYC,QAAQ,kBAAR,CAAlB;AACA,MAAM;AACFC,WADE;AAEFC,QAFE;AAGFC;AAHE,IAIFH,QAAQ,eAAR,CAJJ;AAKA,MAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,MAAMK,WAAWL,QAAQ,eAAR,CAAjB;AACA,MAAMM,WAAWN,QAAQ,qBAAR,CAAjB;AACA,MAAMO,QAAQC,MAAMC,GAAN,KAAc,aAA5B;AACA;;;;AAIAC,QAAQC,KAAR,GAAgB;AACZC,UAAM,MADM;AAEZC,YAAQ;AACJC,iBAAS,KAAK,EAAL,GAAU,EAAV,GAAe,IADpB,CACyB;AADzB,KAFI;AAKZC,UAAM;AACFC,gBAAQjB,SADN;AAEFkB,mBAAWb,KAAKc,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,eAA3B,CAFT,EAEsD;AACxDC,mBAAW,CAHT;AAIFC,oBAAY,KAAK,EAAL,GAAU,EAAV,GAAe,IAJzB,CAI8B;AAJ9B;AALM,CAAhB;AAYA;;;;AAIAX,QAAQY,KAAR,GAAgB;AACZV,UAAM,OADM;AAEZC,YAAQ;AACJU,oBAAYhB,KADR;AAEJiB,gBAAQjB,KAFJ;AAGJkB,gBAAQC,OAAOlB,MAAMiB,MAAN,CAAaE,IAAb,CAAkBD,GAAlB;AAHX,KAFI;AAOZE,WAAOvB;AAPK,CAAhB;AASA;;;;AAIAK,QAAQe,MAAR,GAAiB;AACbb,UAAML,QAAQ,SAAR,GAAoB,UADb;AAEbsB,aAAS;AACLb,gBAAQf;AADH,KAFI;AAKbc,UAAM;AACFC,gBAAQd,IADN;AAEF4B,iBAAS,EAFP,EAEW;AACbC,kBAAU,IAHR;AAIFC,oBAAY,KAAK,IAJf,EAIqB;AACvBC,kBAAU7B,KAAKc,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,cAA3B;AALR,KALO;AAYbe,cAAU;AACNlB,gBAAQb,QADF;AAENgC,eAAO,KAFD;AAGNJ,kBAAU,IAHJ;AAINK,iBAAS,aAJH;AAKNC,8BAAsB,IALhB;AAMNJ,kBAAU7B,KAAKc,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,cAA3B;AANJ;AAZG,CAAjB;AAqBAT,QAAQ4B,IAAR,GAAe;AACX1B,UAAM,UADK,EACO;AAClBC,YAAQ;AACJ0B,kBAAUnC,KAAKc,IAAL,CAAUV,MAAMW,SAAhB,EAA2B,MAA3B,CADN,EAC0C;AAC9CqB,aAAK,GAFD,EAEM;AACVC,iBAAS,OAHL,CAGa;AAHb,KAFG;AAOXnC,cAAU;AACNU,gBAAQV,QADF;AAENoC,sBAAc,MAAM,CAAE,CAFhB,EAEkB;AACxBC,iBAAS,CAAE;AAAF;AAHH;AAPC,CAAf",
    "file": "..\\..\\..\\src\\common\\config\\adapter.js",
    "sourcesContent": [
        "const fileCache = require('think-cache-file');\r\nconst {\r\n    Console,\r\n    File,\r\n    DateFile\r\n} = require('think-logger3');\r\nconst path = require('path');\r\nconst database = require('./database.js');\r\nconst nunjucks = require('think-view-nunjucks');\r\nconst isDev = think.env === 'development';\r\n/**\r\n * cache adapter config\r\n * @type {Object}\r\n */\r\nexports.cache = {\r\n    type: 'file',\r\n    common: {\r\n        timeout: 24 * 60 * 60 * 1000 // millisecond\r\n    },\r\n    file: {\r\n        handle: fileCache,\r\n        cachePath: path.join(think.ROOT_PATH, 'runtime/cache'), // absoulte path is necessarily required\r\n        pathDepth: 1,\r\n        gcInterval: 24 * 60 * 60 * 1000 // gc interval\r\n    }\r\n};\r\n/**\r\n * model adapter config\r\n * @type {Object}\r\n */\r\nexports.model = {\r\n    type: 'mysql',\r\n    common: {\r\n        logConnect: isDev,\r\n        logSql: isDev,\r\n        logger: msg => think.logger.info(msg)\r\n    },\r\n    mysql: database\r\n};\r\n/**\r\n * logger adapter config\r\n * @type {Object}\r\n */\r\nexports.logger = {\r\n    type: isDev ? 'console' : 'dateFile',\r\n    console: {\r\n        handle: Console\r\n    },\r\n    file: {\r\n        handle: File,\r\n        backups: 10, // max chunk number\r\n        absolute: true,\r\n        maxLogSize: 50 * 1024, // 50M\r\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\r\n    },\r\n    dateFile: {\r\n        handle: DateFile,\r\n        level: 'ALL',\r\n        absolute: true,\r\n        pattern: '-yyyy-MM-dd',\r\n        alwaysIncludePattern: true,\r\n        filename: path.join(think.ROOT_PATH, 'logs/app.log')\r\n    }\r\n};\r\nexports.view = {\r\n    type: 'nunjucks', // 这里指定默认的模板引擎是 nunjucks\r\n    common: {\r\n        viewPath: path.join(think.ROOT_PATH, 'view'), //模板文件的根目录\r\n        sep: '_', //Controller 与 Action 之间的连接符\r\n        extname: '.html' //模板文件扩展名\r\n    },\r\n    nunjucks: {\r\n        handle: nunjucks,\r\n        beforeRender: () => {}, // 模板渲染预处理\r\n        options: { // 模板引擎额外的配置参数\r\n        }\r\n    }\r\n}"
    ]
}